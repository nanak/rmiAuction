package loadtest;

import java.util.TimerTask;

import client.TaskExecuter;


/**
 * Thread which creates Auctions with certain durations in set Intervals.
 * 
 * @author Michaela Lipovits
 * @version 20140216
 *
 */
public class CreateTask extends TimerTask{
	private int aucpM,aucD;
	private TaskExecuter t;
	private static final String STRING_CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	private boolean first;
	private int tcpPort;
	
	/**
	 * 
	 * Constuctor, which saves the auctions per minute, the auction duration, the TaskExecuter of the Client initiated in LoadTest, and the TCP port.
	 * 
	 * @param aucpM auctions per minute
	 * @param aucD auction duration
	 * @param t TaskExecuter of the Client initiated in LoadTest
	 * @param tcpPort TCP-Port
	 */
	public CreateTask(int aucpM, int aucD, TaskExecuter t, int tcpPort){
		this.tcpPort=tcpPort;
		this.aucD=aucD;
		this.aucpM=aucpM;
		this.t=t;
		first=true;
	}

	/**
	 * Method run, which logs in at the first run.
	 * After the first run, it creates auctions with the given duration.
	 * The username and auctionname are generated by the method randomString() with the length of 7.
	 */
	@Override
	public void run() {
		if(first){
			t.login(randomString(10), tcpPort, 0);
			first=false;
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
//		if(cli.isClientAlive()){
		t.create((long) aucD, randomString(7));
//		}
		
	}
	/**
	 * Method, which generates a random String with a given length.
	 * 
	 * @param count Length of the String
	 * @return random String
	 */
	public static String randomString(int count) {
		StringBuilder builder = new StringBuilder();
		while (count-- != 0) {
			int character = (int)(Math.random()*STRING_CHARS.length());
			builder.append(STRING_CHARS.charAt(character));
		}
		return builder.toString();
	}
	public void setFirst(boolean first){
		this.first=first;
	}
}
